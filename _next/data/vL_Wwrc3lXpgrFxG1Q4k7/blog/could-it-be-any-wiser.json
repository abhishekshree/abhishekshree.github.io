{"pageProps":{"post":{"mdxSource":{"compiledSource":"\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A friend sent me this blog, and it seriously is the best I have read in a while. \"), mdx(\"p\", null, \"Have a look: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://tonsky.me/blog/disenchantment/\"\n  }, \"tonsky.me/blog/disenchantment/\")));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>A friend sent me this blog, and it seriously is the best I have read in a while. </p><p>Have a look: <a target=\"_blank\" rel=\"noopener noreferrer\" style=\"text-decoration:none\" href=\"https://tonsky.me/blog/disenchantment/\">tonsky.me/blog/disenchantment/</a></p>","scope":{}},"frontMatter":{"wordCount":23,"readingTime":{"text":"1 min read","minutes":0.11,"time":6600,"words":22},"slug":"could-it-be-any-wiser","fileName":"could-it-be-any-wiser.mdx","title":"Could it be any wiser?","date":"2023-07-11","tags":["software"],"draft":false,"summary":"A word for everyone who is here measuring work quality.","images":[]}},"prev":{"title":"Generics and code correctness","date":"2023-07-05","tags":[],"draft":false,"summary":"Summarizing how generics and abstractions help in explainability of code","images":[],"slug":"generics-and-code-correctness"},"next":{"title":"Lightweight threads and concurrency","date":"2023-10-14","tags":["go","linux"],"draft":false,"summary":"A bit about what goroutines actually are.","images":[],"slug":"goroutines"}},"__N_SSG":true}